<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pn.mapper.InStoreMapper">
<!--
    //添加入库单
    int insertInStore(InStore inStore);
-->
    <insert id="insertInStore">
        insert into in_store values(
            null, #{storeId}, #{productId}, #{inNum}, #{createBy}, now(), 0
        )
    </insert>


<!--
    //获取入库列表总行数
    Integer findInStoreCount(InStore inStore);
-->
    <select id="findInStoreCount" resultType="integer">
        select count(*) from in_store t1,product t2, store t3, user_info t4
        where t1.product_id = t2.product_id and t1.store_id = t3.store_id and t1.create_by = t4.user_id
        <if test="storeId != null and storeId != ''">
            and t1.store_id = #{storeId}
        </if>
        <if test="productName != null and productName != ''">
            and t2.product_name like concat('%',#{productName},'%')
        </if>
        <if test="startTime != null and startTime != ''">
            and t1.create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and t1.create_time &lt;= #{endTime}
        </if>
    </select>

<!--
    //查询所有入库单并分页 或者 根据仓库id、商品名称、起止时间查询入库单并分页
    List<InStore> findInStorePage(@Param("inStore") InStore inStore, @Param("page") Page page);
-->

    <select id="findInStorePage" resultType="inStore">
        select t1.*, t2.store_name, t3.product_name, t3.in_price, t4.user_code
        from in_store t1, store t2, product t3, user_info t4
        where t1.store_id = t2.store_id and t1.product_id = t3.product_id and t1.create_by = t4.user_id
        <if test="inStore.storeId != null and inStore.storeId != ''">
            and t1.store_id = #{inStore.storeId}
        </if>
        <if test="inStore.productName != null and inStore.productName != ''">
            and t3.product_name like concat('%',#{inStore.productName},'%')
        </if>
        <if test="inStore.startTime != null and inStore.startTime != ''">
            and t1.create_time &gt;= #{inStore.startTime}
        </if>
        <if test="inStore.endTime != null and inStore.endTime != ''">
            and t1.create_time &lt;= #{inStore.endTime}
        </if>
        order by t1.create_time desc
        limit #{page.limitIndex},#{page.pageSize}
    </select>


<!--
    //根据入库单id修改入库单状态为已入库
    int setIsInById(Integer inStoreId)
-->
    <update id="setIsInById">
        update in_store set is_in = 1 where ins_id = #{isStoreId}
    </update>
</mapper>
